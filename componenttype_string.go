// Code generated by "stringer -type ComponentType -trimprefix ComponentType"; DO NOT EDIT.

package qualisys

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ComponentType3D-1]
	_ = x[ComponentType3DNoLabels-2]
	_ = x[ComponentTypeAnalog-3]
	_ = x[ComponentTypeForce-4]
	_ = x[ComponentType6D-5]
	_ = x[ComponentType6DEuler-6]
	_ = x[ComponentType2D-7]
	_ = x[ComponentType2DLinearized-8]
	_ = x[ComponentType3DResidual-9]
	_ = x[ComponentType3DNoLabelsResidual-10]
	_ = x[ComponentType6DResidual-11]
	_ = x[ComponentType6DEulerResidual-12]
	_ = x[ComponentTypeAnalogSingle-13]
	_ = x[ComponentTypeImage-14]
	_ = x[ComponentTypeForceSingle-15]
	_ = x[ComponentTypeGazeVector-16]
	_ = x[ComponentTypeTimecode-17]
	_ = x[ComponentTypeSkeleton-18]
	_ = x[ComponentTypeEyeTracker-19]
}

const _ComponentType_name = "3D3DNoLabelsAnalogForce6D6DEuler2D2DLinearized3DResidual3DNoLabelsResidual6DResidual6DEulerResidualAnalogSingleImageForceSingleGazeVectorTimecodeSkeletonEyeTracker"

var _ComponentType_index = [...]uint8{0, 2, 12, 18, 23, 25, 32, 34, 46, 56, 74, 84, 99, 111, 116, 127, 137, 145, 153, 163}

func (i ComponentType) String() string {
	i -= 1
	if i < 0 || i >= ComponentType(len(_ComponentType_index)-1) {
		return "ComponentType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ComponentType_name[_ComponentType_index[i]:_ComponentType_index[i+1]]
}
